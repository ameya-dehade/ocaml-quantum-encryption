// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Bytes from "rescript/lib/es6/bytes.js";
import * as Random from "rescript/lib/es6/random.js";

function randomnessSetup() {
  console.log("randomnessSetup called");
}

function generateKeypair() {
  console.log("generateKeypair called");
  return [
          String(Random.$$int(100)),
          String(Random.$$int(100))
        ];
}

function generateAndEncryptSharedKey(theirPubKey) {
  console.log("generateAndEncryptSharedKey called");
  return [
          String(Random.$$int(100)),
          String(Random.$$int(100))
        ];
}

function decryptSharedKey(myPrivKey, cipher) {
  console.log("decryptSharedKey called");
  return cipher;
}

function encryptMessage(sharedKey, message) {
  console.log("encryptMessage called");
  return [
          String(Random.$$int(100)),
          String(Random.$$int(100))
        ];
}

function decryptMessage(sharedKey, nonce, cipher) {
  console.log("decryptMessage called");
  return Bytes.of_string(cipher);
}

export {
  randomnessSetup ,
  generateKeypair ,
  generateAndEncryptSharedKey ,
  decryptSharedKey ,
  encryptMessage ,
  decryptMessage ,
}
/* No side effect */
